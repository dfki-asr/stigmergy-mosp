PREFIX sc: <http://purl.org/science/owl/sciencecommons/>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix mosp: <http://dfki.de/examples/stig_mosp#>
prefix ord: <http://dfki.de/examples/stig_mosp/orders#>
prefix st: <http://dfki.de/stigld/>
prefix schema: <http://schema.org/>


#### DELETE ADJACENT RELATIONS
DELETE {
  ?other st:adjacentTo ?finishedOrder .
  ?finishedOrder st:adjacentTo ?other .
}
WHERE {
  ?finishedOrder a st:Topos , schema:Order ; st:adjacentTo ?other .
  ?other a st:Topos, schema:Order ; st:adjacentTo ?finishedOrder .

  {SELECT ?finishedOrder ?finishedStack {
    ?finishedOrder a schema:Order ; schema:orderedItem ?item .
    ?finishedStack a mosp:Stack ; mosp:forOrder ?finishedOrder .

    FILTER NOT EXISTS {
      ?finishedOrder a schema:Order ; schema:orderedItem ?notFinished .
      FILTER NOT EXISTS {?finishedStack a mosp:Stack ; mosp:forOrder ?finishedOrder ; schema:orderedItem [ a ?notFinished ]}
    }
  }}
} ;

#### LOG CURRENT NUMBER OF OPEN stacks
DELETE {  mosp:maxStackCount rdf:value  ?oldCount . }
INSERT {  mosp:maxStackCount rdf:value  ?new . }
WHERE {
  {SELECT (count(?stack) as ?newCount) WHERE {
      ?stack a mosp:Stack .
  }}
  OPTIONAL {mosp:maxStackCount rdf:value ?oldCount .}
  BIND(IF(bound(?oldCount), ?oldCount, 0) as ?old)
  BIND(IF(?newCount > ?old, ?newCount,?old) as ?new)
} ;

#### DELETE ORDERS AND THEIR STACKS WHEN FINISHED
DELETE {
  ?finishedStack a mosp:Stack; mosp:forOrder ?finishedOrder ; schema:orderedItem ?item .
  ?item ?p ?o .
  ?finishedOrder a schema:Order , st:Topos ; st:adjacentTo ?other ; st:carries ?trace ; schema:orderedItem ?itemClass.
  ?trace a st:Trace ; ?t_p ?t_o .
}
WHERE {
  ?finishedOrder a schema:Order , st:Topos ; st:carries ?trace ; schema:orderedItem ?itemClass .
  ?trace a st:Trace ; ?t_p ?t_o .
  FILTER(isblank(?trace))

  ?finishedStack mosp:forOrder ?finishedOrder ; schema:orderedItem ?item .
  ?item ?p ?o .
  FILTER(isblank(?item))

  {SELECT ?finishedOrder ?finishedStack {
      ?finishedOrder a schema:Order ; schema:orderedItem ?item .
      ?finishedStack a mosp:Stack ; mosp:forOrder ?finishedOrder .

      FILTER NOT EXISTS {
        ?finishedOrder a schema:Order ; schema:orderedItem ?notFinished .
        FILTER NOT EXISTS {?finishedStack a mosp:Stack ; mosp:forOrder ?finishedOrder ; schema:orderedItem [ a ?notFinished ]}
      }
    }}
} ;


#### AGENT IS NOW MOST LIKELY IN NIRVANA. REMOVE HIS LOCALITY TO PICK A NEW
#### RANDOM ORDER NEXT TIME

DELETE {
  mosp:Agent st:locatedAt ?at
} WHERE {
  mosp:Agent st:locatedAt ?at .
  FILTER NOT EXISTS {
    ?at a st:Topos .
  }
}
