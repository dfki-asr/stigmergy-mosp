prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix mosp: <http://dfki.de/examples/stig_mosp#>
prefix ord: <http://dfki.de/examples/stig_mosp/orders#>
prefix st: <http://dfki.de/stigld/>
prefix schema: <http://schema.org/>

## If located at a Topos, agent will move to a neighbour order with highest concentration
## of pheromones

DELETE {
  mosp:Agent st:locatedAt ?from
}
INSERT {
  mosp:Agent st:locatedAt ?to
}
WHERE {
mosp:Agent st:locatedAt ?from .
{SELECT DISTINCT  ?to WHERE {

  {SELECT DISTINCT ?to ?count WHERE {
    mosp:Agent st:locatedAt ?from .
    ?from st:adjacentTo ?to .
    {SELECT DISTINCT ?to (COUNT(?marker) as ?count) WHERE {
        ?to st:carries ?marker . ?marker a st:Trace  .
    } GROUP BY ?to }}}

  {SELECT (max(?count) as ?max) WHERE {
   {SELECT DISTINCT ?to (COUNT(?marker) as ?count) WHERE {
        mosp:Agent st:locatedAt ?from .
        ?from st:adjacentTo ?to .
        ?to st:carries ?marker . ?marker a st:Trace  .
    } GROUP BY ?to }}}

  FILTER(?count = ?max)
    } ORDER BY RAND() LIMIT 1}} ;


## Send agent to random order if not yet present anywhere

INSERT {
   mosp:Agent st:locatedAt ?randomOrder
}
WHERE {
   {SELECT ?randomOrder WHERE  {
    {SELECT (count(?item) as ?total) ?randomOrder WHERE {
      ?randomOrder a schema:Order ; schema:orderedItem ?item .
    } GROUP BY ?randomOrder }

    {SELECT (min(?total) as ?min) WHERE {
    {SELECT (count(?item) as ?total) ?randomOrder WHERE {
      ?randomOrder a schema:Order ; schema:orderedItem ?item .
    } GROUP BY ?randomOrder }}}
    FILTER(?min = ?total)
   } ORDER BY RAND() LIMIT 1}
    FILTER NOT EXISTS { mosp:Agent st:locatedAt ?anywhere }
}
